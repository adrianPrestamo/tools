#!/usr/bin/env python2

# Copyright 2014 Ronoaldo JLP (http://www.ronoaldo.net)
# 
#   Licensed under the Apache License, Version 2.0 (the 'License');
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an 'AS IS' BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.


""" Sendmail like python utility for Gmail """

import smtplib
import getpass
import optparse
import ConfigParser
import base64
import os

import email

def sendmail(sender, recipient, subject, body,
        server='smtp.gmail.com', port=465,
        username='', password=''):
    """ Sends a new e-mail via SMTP """
    msg = email.message_from_string(body)
    if subject:
        del msg['Subject']
        msg['Subject'] = subject
    if recipient:
        del msg['To']
        msg['To'] = recipient
    del msg['From']
    msg['From'] = sender

    # Fix for appengine dev_appserver.py:
    if not msg.is_multipart():
        try:
            if msg.get_payload().index('Content-Type: text/html') > 0:
                for line in msg.get_payload().split('\n'):
                    if line.startswith('--==='):
                        boundary = line.split('--')[1].strip()
                        msg.add_header('Content-Type', 'multipart/mixed')
                        msg.set_boundary(boundary)
                        break
        except:
            pass

    session = smtplib.SMTP_SSL(server)
    session.login(username, password)
    session.sendmail(sender, recipient, msg.as_string())
    session.quit()

if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option('-s', dest='subject')
    parser.add_option('-f', dest='sender')

    options, args = parser.parse_args()

    body = ""
    line = raw_input()
    while line <> '.':
        try:
            line = raw_input()
        except EOFError:
            break
        body += line + '\r\n'
    cfg = ConfigParser.ConfigParser()
    cfg.read(os.path.expanduser('~/.mailrc'))
    sender = cfg.get('mail', 'sender')
    username = cfg.get('mail', 'username')
    password = base64.b64decode(cfg.get('mail','password'))

    sendmail(sender, args[0], options.subject, body,
             username=username, password=password)
